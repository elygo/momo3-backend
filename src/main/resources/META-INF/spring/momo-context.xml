<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder location="classpath*:META-INF/config/${app.profile}/*.properties" />

    <context:component-scan base-package="de.terrestris">
        <context:exclude-filter
            expression="org.springframework.stereotype.Controller" type="annotation" />
    </context:component-scan>

    <!-- The multipart resolver used as strategy interface for
     multipart file upload -->
    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- Limit file upload size to 1000 Mb -->
        <property name="maxUploadSize" value="1000000000" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <!-- The mailSender configuration -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.server.host}" />
        <property name="port" value="${mail.server.port}" />
        <property name="username" value="${mail.server.username}" />
        <property name="password" value="${mail.server.password}" />
        <property name="javaMailProperties">
           <props>
                  <prop key="mail.transport.protocol">${mail.server.transportProtocol}</prop>
                  <prop key="mail.smtp.auth">${mail.server.smtpAuth}</prop>
                  <prop key="mail.smtp.starttls.enable">${mail.server.smtpStartTlsEnable}</prop>
               </props>
        </property>
    </bean>

    <bean id="publicInterceptGeoServerAction" class="java.lang.String">
        <constructor-arg value="${momo.publicInterceptGeoServerAction}"></constructor-arg>
    </bean>

    <bean id="geoServerBaseUrl" class="java.lang.String">
       <constructor-arg value="${geoserver.baseUrl}"></constructor-arg>
    </bean>

    <!-- Print servlet -->
    <bean id="printservletBaseUrl" class="java.lang.String">
        <constructor-arg value="${printservlet.baseUrl}"></constructor-arg>
    </bean>

    <bean id="printservletInterceptorUrl" class="java.lang.String">
        <constructor-arg value="${printservlet.interceptorUrl}"></constructor-arg>
    </bean>

    <!-- The default mail sender -->
    <bean id="defaultMailSender" class="java.lang.String">
        <constructor-arg value="${mail.defaultSender}"></constructor-arg>
    </bean>

    <!-- The registration-success mail message template -->
    <bean id="registrationMailMessageTemplate" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.registrationMailTemplateSubject}" />
        <property name="text" value="${mail.registrationMailTemplateText}" />
    </bean>

    <!-- The reset-password mail message template -->
    <bean id="resetPasswordMailMessageTemplate" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.resetPasswordMailMessageTemplateSubject}" />
        <property name="text" value="${mail.resetPasswordMailMessageTemplateText}" />
    </bean>

    <!-- The change permissions mail message template in english -->
    <bean id="changePermissionsMailMessageTemplate-en" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.en.changePermissionsMailMessageTemplateSubject}" />
        <property name="text" value="${mail.en.changePermissionsMailMessageTemplateText}" />
    </bean>

    <!-- The change permissions mail message template in mongolian -->
    <bean id="changePermissionsMailMessageTemplate-mn" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.mn.changePermissionsMailMessageTemplateSubject}" />
        <property name="text" value="${mail.mn.changePermissionsMailMessageTemplateText}" />
    </bean>

    <!-- The change permissions mail message template in german -->
    <bean id="changePermissionsMailMessageTemplate-de" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.de.changePermissionsMailMessageTemplateSubject}" />
        <property name="text" value="${mail.de.changePermissionsMailMessageTemplateText}" />
    </bean>

    <!-- The change personal details and permissions mail message template for the user itself in english-->
    <bean id="changePermissionsMailMessageTemplateForUser-en" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.en.changePermissionsMailMessageTemplateSubjectForUser}" />
        <property name="text" value="${mail.en.changePermissionsMailMessageTemplateTextForUser}" />
    </bean>

    <!-- The change personal details and permissions mail message template for the user itself in mongolian-->
    <bean id="changePermissionsMailMessageTemplateForUser-mn" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.mn.changePermissionsMailMessageTemplateSubjectForUser}" />
        <property name="text" value="${mail.mn.changePermissionsMailMessageTemplateTextForUser}" />
    </bean>

    <!-- The change personal details and permissions mail message template for the user itself in german-->
    <bean id="changePermissionsMailMessageTemplateForUser-de" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.defaultSender}" />
        <property name="subject" value="${mail.de.changePermissionsMailMessageTemplateSubjectForUser}" />
        <property name="text" value="${mail.de.changePermissionsMailMessageTemplateTextForUser}" />
    </bean>

    <!-- The (relative) URL to your change password client component -->
    <bean id="changePasswordPath" class="java.lang.String">
        <constructor-arg value="${login.changePasswordPath}"></constructor-arg>
    </bean>

    <!-- The (relative) URL used for redirects after a login error-->
    <bean id="redirectPathLoginError" class="java.lang.String">
        <constructor-arg value="${login.redirectPathLoginError}"></constructor-arg>
    </bean>

    <!-- The (relative) URL used for redirects after a login attempt from a not-activated user-->
    <bean id="redirectPathForDisabledUser" class="java.lang.String">
        <constructor-arg value="${login.redirectPathForDisabledUser}"></constructor-arg>
    </bean>

    <!-- The (relative) URL used for redirects after user activation error -->
    <bean id="redirectPathAfterActivationError" class="java.lang.String">
        <constructor-arg value="${login.redirectPathAfterActivationError}"></constructor-arg>
    </bean>

        <!-- The (relative) URL used for redirects after user activation error -->
    <bean id="redirectPathAfterRegistrationCompleted" class="java.lang.String">
        <constructor-arg value="${login.redirectPathAfterRegistrationCompleted}"></constructor-arg>
    </bean>

    <!-- The GeoServer Namespace to URI map used in the Interceptor -->
    <util:properties id="geoServerNameSpaces" location="classpath*:META-INF/config/${app.profile}/geoServerNameSpaces.properties" />

    <!-- Project specific WMS interceptor -->
    <bean id="wmsRequestInterceptor" class="de.terrestris.momo.interceptor.MomoWmsRequestInterceptor" />
    <bean id="wmsResponseInterceptor" class="de.terrestris.momo.interceptor.MomoWmsResponseInterceptor" />

    <!-- Project specific WFS interceptor -->
    <bean id="wfsRequestInterceptor" class="de.terrestris.momo.interceptor.MomoWfsRequestInterceptor" />
    <bean id="wfsResponseInterceptor" class="de.terrestris.momo.interceptor.MomoWfsResponseInterceptor" />

    <!-- The GeoNetwork connection parameters -->
    <bean id="geoNetworkScheme" class="java.lang.String">
        <constructor-arg value="${geonetwork.scheme}"></constructor-arg>
    </bean>

    <bean id="geoNetworkHost" class="java.lang.String">
        <constructor-arg value="${geonetwork.host}"></constructor-arg>
    </bean>

    <bean id="geoNetworkPort" class="java.lang.Integer">
        <constructor-arg value="${geonetwork.port}"></constructor-arg>
    </bean>

    <bean id="geoNetworkBasePath" class="java.lang.String">
        <constructor-arg value="${geonetwork.basePath}"></constructor-arg>
    </bean>

    <bean id="geoNetworkCswPath" class="java.lang.String">
        <constructor-arg value="${geonetwork.cswPath}"></constructor-arg>
    </bean>

    <bean id="geoNetworkCswUrl" class="java.lang.String">
        <constructor-arg value="${geonetwork.scheme}://${geonetwork.host}:${geonetwork.port}${geonetwork.basePath}${geonetwork.cswPath}"></constructor-arg>
    </bean>

    <bean id="geoNetworkUsername" class="java.lang.String">
        <constructor-arg value="${geonetwork.username}"></constructor-arg>
    </bean>

    <bean id="geoNetworkPassword" class="java.lang.String">
        <constructor-arg value="${geonetwork.password}"></constructor-arg>
    </bean>

    <!-- The GeoServer connection parameters -->
    <bean id="geoServerScheme" class="java.lang.String">
        <constructor-arg value="${geoserver.scheme}"></constructor-arg>
    </bean>

    <bean id="geoServerHost" class="java.lang.String">
        <constructor-arg value="${geoserver.host}"></constructor-arg>
    </bean>

    <bean id="geoServerPort" class="java.lang.Integer">
        <constructor-arg value="${geoserver.port}"></constructor-arg>
    </bean>

    <bean id="geoServerBasePath" class="java.lang.String">
        <constructor-arg value="${geoserver.basePath}"></constructor-arg>
    </bean>

    <bean id="geoServerBaseURL" class="java.lang.String">
        <constructor-arg value="${geoserver.scheme}://${geoserver.host}:${geoserver.port}${geoserver.basePath}"></constructor-arg>
    </bean>

    <bean id="geoServerUsername" class="java.lang.String">
        <constructor-arg value="${geoserver.username}"></constructor-arg>
    </bean>

    <bean id="geoServerPassword" class="java.lang.String">
        <constructor-arg value="${geoserver.password}"></constructor-arg>
    </bean>

    <bean id="geoServerDefaultWorkspace" class="java.lang.String">
        <constructor-arg value="${geoserver.defaultWorkspace}"></constructor-arg>
    </bean>

    <bean id="geoServerDefaultDatastore" class="java.lang.String">
        <constructor-arg value="${geoserver.defaultDatastore}"></constructor-arg>
    </bean>

    <bean id="geoServerDefaultSrs" class="java.lang.String">
        <constructor-arg value="${geoserver.defaultSRS}"></constructor-arg>
    </bean>

    <bean id="geoServerRestBasePath" class="java.lang.String">
        <constructor-arg value="${geoserver.rest.basePath}"></constructor-arg>
    </bean>

    <bean id="geoServerImporterBasePath" class="java.lang.String">
        <constructor-arg value="${geoserver.importer.basePath}"></constructor-arg>
    </bean>

    <bean id="geoServerImporterBaseURL" class="java.lang.String">
        <constructor-arg value="${geoserver.scheme}://${geoserver.host}:${geoserver.port}${geoserver.basePath}${geoserver.rest.basePath}${geoserver.importer.basePath}"></constructor-arg>
    </bean>

    <bean id="geoServerImporterPerformGdalAddo" class="java.lang.Boolean">
        <constructor-arg value="${geoserver.importer.raster.performGdalAddo}"></constructor-arg>
    </bean>

    <bean id="geoServerImporterGdalAddoLevels" class="java.lang.String">
        <constructor-arg value="${geoserver.importer.raster.gdalAddoLevels}"></constructor-arg>
    </bean>

    <bean id="geoServerImporterPerformGdalWarp" class="java.lang.Boolean">
        <constructor-arg value="${geoserver.importer.raster.performGdalWarp}"></constructor-arg>
    </bean>

    <bean id="geoServerSshUserName" class="java.lang.String">
        <constructor-arg value="${geoserver.ssh.username}"></constructor-arg>
    </bean>

    <bean id="geoServerSshPort" class="java.lang.String">
        <constructor-arg value="${geoserver.ssh.port}"></constructor-arg>
    </bean>

    <bean id="geoServerSshKeyPath" class="java.lang.String">
        <constructor-arg value="${geoserver.ssh.keyPath}"></constructor-arg>
    </bean>

    <bean id="geoServerDataDir" class="java.lang.String">
        <constructor-arg value="${geoserver.data.dir}"></constructor-arg>
    </bean>

    <!-- GeoServerReader -->
    <bean id="geoServerReaderDao" class="de.terrestris.momo.dao.GeoserverReaderDao">
        <constructor-arg ref="geoServerBaseURL" />
        <constructor-arg ref="geoServerUsername" />
        <constructor-arg ref="geoServerPassword" />
        <property name="workspace">
            <ref bean="geoServerDefaultWorkspace" />
        </property>
        <property name="datastore">
            <ref bean="geoServerDefaultDatastore" />
        </property>
    </bean>

    <!-- GeoServerPublisher -->
    <bean id="geoServerPublisherDao" class="de.terrestris.momo.dao.GeoserverPublisherDao">
        <constructor-arg ref="geoServerBaseURL" />
        <constructor-arg ref="geoServerUsername" />
        <constructor-arg ref="geoServerPassword" />
        <property name="workspace">
            <ref bean="geoServerDefaultWorkspace" />
        </property>
        <property name="datastore">
            <ref bean="geoServerDefaultDatastore" />
        </property>
    </bean>

    <!-- GeoServer Importer Publisher -->
    <bean id="geoServerRESTImporterPublisher" class="de.terrestris.momo.util.importer.RESTImporterPublisher">
        <constructor-arg ref="geoServerImporterBaseURL"></constructor-arg>
        <constructor-arg ref="geoServerDefaultSrs"></constructor-arg>
        <constructor-arg ref="geoServerUsername"></constructor-arg>
        <constructor-arg ref="geoServerPassword"></constructor-arg>
    </bean>

</beans>
